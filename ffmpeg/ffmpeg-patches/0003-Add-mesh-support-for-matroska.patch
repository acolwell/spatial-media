From 80a2c182c780647cf983e3199d6080f2886dd4fa Mon Sep 17 00:00:00 2001
From: Aaron Colwell <300262+acolwell@users.noreply.github.com>
Date: Sat, 18 Jul 2020 00:47:46 -0700
Subject: [PATCH 3/6] Add mesh support for matroska.

---
 libavformat/matroskadec.c | 20 ++++++++++++++++----
 libavformat/matroskaenc.c |  6 ++++++
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/libavformat/matroskadec.c b/libavformat/matroskadec.c
index cff7f0cb54..efec22947c 100644
--- a/libavformat/matroskadec.c
+++ b/libavformat/matroskadec.c
@@ -2161,7 +2161,7 @@ static int mkv_parse_video_color(AVStream *st, const MatroskaTrack *track) {
 static int mkv_parse_video_projection(AVStream *st, const MatroskaTrack *track,
                                       void *logctx)
 {
-    AVSphericalMapping *spherical;
+    AVSphericalMapping *spherical = NULL;
     enum AVSphericalProjection projection;
     size_t spherical_size;
     uint32_t l = 0, t = 0, r = 0, b = 0;
@@ -2225,6 +2225,16 @@ static int mkv_parse_video_projection(AVStream *st, const MatroskaTrack *track,
     case MATROSKA_VIDEO_PROJECTION_TYPE_RECTANGULAR:
         /* No Spherical metadata */
         return 0;
+    case MATROSKA_VIDEO_PROJECTION_TYPE_MESH:
+        spherical_size = sizeof(AVSphericalMapping) + track->video.projection.private.size;
+        spherical = av_mallocz(spherical_size);
+        if (!spherical)
+            return AVERROR(ENOMEM);
+        projection = AV_SPHERICAL_MESH;
+        memcpy(spherical->mesh_data, track->video.projection.private.data,
+               track->video.projection.private.size);
+        spherical->mesh_size = track->video.projection.private.size;
+        break;
     default:
         av_log(logctx, AV_LOG_WARNING,
                "Unknown spherical metadata type %"PRIu64"\n",
@@ -2232,9 +2242,11 @@ static int mkv_parse_video_projection(AVStream *st, const MatroskaTrack *track,
         return 0;
     }
 
-    spherical = av_spherical_alloc(&spherical_size);
-    if (!spherical)
-        return AVERROR(ENOMEM);
+    if (!spherical) {
+        spherical = av_spherical_alloc(&spherical_size);
+        if (!spherical)
+            return AVERROR(ENOMEM);
+    }
 
     spherical->projection = projection;
 
diff --git a/libavformat/matroskaenc.c b/libavformat/matroskaenc.c
index eaed02bc92..3297c9ec9e 100644
--- a/libavformat/matroskaenc.c
+++ b/libavformat/matroskaenc.c
@@ -963,6 +963,12 @@ static void mkv_write_video_projection(AVFormatContext *s, AVIOContext *pb,
         put_ebml_binary(pb, MATROSKA_ID_VIDEOPROJECTIONPRIVATE,
                         private, 12);
         break;
+    case AV_SPHERICAL_MESH:
+        put_ebml_uint(pb, MATROSKA_ID_VIDEOPROJECTIONTYPE,
+                      MATROSKA_VIDEO_PROJECTION_TYPE_MESH);
+        put_ebml_binary(pb, MATROSKA_ID_VIDEOPROJECTIONPRIVATE,
+                        spherical->mesh_data, spherical->mesh_size);
+        break;
     default:
         av_assert0(0);
     }
-- 
2.25.1

